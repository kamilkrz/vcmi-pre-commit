name: Main Branch CI
permissions:
  contents: read
on:
  push:
    branches: [main]

env:
  REPO_NAME: kamilkrz/vcmi-pre-commit

jobs:
  generate_sem_version:
    name: Generate sem version
    runs-on: ubuntu-latest
    outputs:
      semVersion: ${{ steps.semVersion.outputs.version_tag }}
      majorVersion: v${{ steps.semVersion.outputs.major }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Generate semantic version
        uses: paulhatch/semantic-version@v5.4.0
        id: semVersion
        with:
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          version_format: "${major}.${minor}.${patch}"
          bump_each_commit: false
  build:
    runs-on: ubuntu-latest
    needs: generate_sem_version
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Tag new target
        env:
          GIT_TAG: ${{needs.generate_sem_version.outputs.semVersion}}
        run: git tag -f "$GIT_TAG" main
      - name: Push new tag
        env:
          GIT_TAG: ${{needs.generate_sem_version.outputs.semVersion}}
        run: git push origin refs/tags/"$GIT_TAG" --force
      - name: GitHub cli release delete if exists
        env:
          GIT_TAG: ${{needs.generate_sem_version.outputs.semVersion}}
          GITHUB_TOKEN: ${{ github.TOKEN }}
          REPO_NAME: ${{ env.REPO_NAME }}
        run: |
          gh release delete "${GIT_TAG}" \
          --cleanup-tag \
          --yes \
          --repo "${REPO_NAME}" || true
      - name: GitHub cli release create
        env:
          GIT_TAG: ${{needs.generate_sem_version.outputs.semVersion}}
          GITHUB_TOKEN: ${{ github.TOKEN }}
          REPO_NAME: ${{ env.REPO_NAME }}
        run: |
          gh release create "${GIT_TAG}" \
            --generate-notes \
            --target "main" \
            --repo "${REPO_NAME}"